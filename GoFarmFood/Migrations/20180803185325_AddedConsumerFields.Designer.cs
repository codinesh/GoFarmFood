// <auto-generated />
using System;
using GoFarmFood.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GoFarmFood.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180803185325_AddedConsumerFields")]
    partial class AddedConsumerFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoFarmFood.Web.DataAccess.Entities.Common.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("LastModifiedBy");

                    b.Property<DateTime?>("LastModifiedOn");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("GoFarmFood.Web.DataAccess.Entities.ConsumerAggregate.Consumer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AddressId");

                    b.Property<string>("FirstName");

                    b.Property<Guid?>("LastModifiedBy");

                    b.Property<DateTime?>("LastModifiedOn");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("GoFarmFood.Web.DataAccess.Entities.ConsumerAggregate.PreferredFarmer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ConsumerId");

                    b.Property<Guid>("FarmerId");

                    b.Property<int>("ItemType");

                    b.Property<Guid?>("LastModifiedBy");

                    b.Property<DateTime?>("LastModifiedOn");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.ToTable("PreferredFarmer");
                });

            modelBuilder.Entity("GoFarmFood.Web.DataAccess.Entities.FarmerAggregate.AvailableItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CapacityPerDay");

                    b.Property<Guid>("FarmerId");

                    b.Property<Guid>("ItemId");

                    b.Property<Guid?>("LastModifiedBy");

                    b.Property<DateTime?>("LastModifiedOn");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("AvailableItems");
                });

            modelBuilder.Entity("GoFarmFood.Web.DataAccess.Entities.FarmerAggregate.Farmer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AddressId");

                    b.Property<string>("FirstName");

                    b.Property<Guid?>("LastModifiedBy");

                    b.Property<DateTime?>("LastModifiedOn");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Farmers");
                });

            modelBuilder.Entity("GoFarmFood.Web.DataAccess.Entities.OrderAggregate.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ItemType");

                    b.Property<Guid?>("LastModifiedBy");

                    b.Property<DateTime?>("LastModifiedOn");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<double>("UnitPrice");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("GoFarmFood.Web.DataAccess.Entities.OrderAggregate.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ConsumerId");

                    b.Property<Guid>("FarmerId");

                    b.Property<Guid>("ItemId");

                    b.Property<Guid?>("LastModifiedBy");

                    b.Property<DateTime?>("LastModifiedOn");

                    b.Property<Guid?>("PaymentInforId");

                    b.Property<int>("Quantity");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("PaymentInforId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GoFarmFood.Web.DataAccess.Entities.OrderAggregate.PaymentInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardDetails");

                    b.Property<Guid>("CardId");

                    b.Property<Guid>("CustomerId");

                    b.Property<Guid?>("LastModifiedBy");

                    b.Property<DateTime?>("LastModifiedOn");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("PaymentInformation");
                });

            modelBuilder.Entity("GoFarmFood.Web.DataAccess.Entities.ConsumerAggregate.Consumer", b =>
                {
                    b.HasOne("GoFarmFood.Web.DataAccess.Entities.Common.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("GoFarmFood.Web.DataAccess.Entities.ConsumerAggregate.PreferredFarmer", b =>
                {
                    b.HasOne("GoFarmFood.Web.DataAccess.Entities.ConsumerAggregate.Consumer", "Consumer")
                        .WithMany("PreferredFarmers")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GoFarmFood.Web.DataAccess.Entities.FarmerAggregate.Farmer", b =>
                {
                    b.HasOne("GoFarmFood.Web.DataAccess.Entities.Common.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("GoFarmFood.Web.DataAccess.Entities.OrderAggregate.Order", b =>
                {
                    b.HasOne("GoFarmFood.Web.DataAccess.Entities.OrderAggregate.PaymentInformation", "PaymentInfor")
                        .WithMany()
                        .HasForeignKey("PaymentInforId");
                });
#pragma warning restore 612, 618
        }
    }
}
